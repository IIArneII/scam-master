// Code generated by go-swagger; DO NOT EDIT.

package transactions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ConfirmHandlerFunc turns a function with the right signature into a confirm handler
type ConfirmHandlerFunc func(ConfirmParams) ConfirmResponder

// Handle executing the request and returning a response
func (fn ConfirmHandlerFunc) Handle(params ConfirmParams) ConfirmResponder {
	return fn(params)
}

// ConfirmHandler interface for that can handle valid confirm params
type ConfirmHandler interface {
	Handle(ConfirmParams) ConfirmResponder
}

// NewConfirm creates a new http.Handler for the confirm operation
func NewConfirm(ctx *middleware.Context, handler ConfirmHandler) *Confirm {
	return &Confirm{Context: ctx, Handler: handler}
}

/*
	Confirm swagger:route POST /confirm-transaction Transactions confirm

# Confirm transaction

Confirm the funds transfer with a confirmation code.
*/
type Confirm struct {
	Context *middleware.Context
	Handler ConfirmHandler
}

func (o *Confirm) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewConfirmParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
