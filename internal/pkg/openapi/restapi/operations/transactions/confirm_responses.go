// Code generated by go-swagger; DO NOT EDIT.

package transactions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"scam-master/internal/pkg/openapi/models"
)

// ConfirmNoContentCode is the HTTP code returned for type ConfirmNoContent
const ConfirmNoContentCode int = 204

/*
ConfirmNoContent OK

swagger:response confirmNoContent
*/
type ConfirmNoContent struct {
}

// NewConfirmNoContent creates ConfirmNoContent with default headers values
func NewConfirmNoContent() *ConfirmNoContent {

	return &ConfirmNoContent{}
}

// WriteResponse to the client
func (o *ConfirmNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

func (o *ConfirmNoContent) ConfirmResponder() {}

// ConfirmBadRequestCode is the HTTP code returned for type ConfirmBadRequest
const ConfirmBadRequestCode int = 400

/*
ConfirmBadRequest Bad request

swagger:response confirmBadRequest
*/
type ConfirmBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewConfirmBadRequest creates ConfirmBadRequest with default headers values
func NewConfirmBadRequest() *ConfirmBadRequest {

	return &ConfirmBadRequest{}
}

// WithPayload adds the payload to the confirm bad request response
func (o *ConfirmBadRequest) WithPayload(payload *models.Error) *ConfirmBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the confirm bad request response
func (o *ConfirmBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConfirmBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *ConfirmBadRequest) ConfirmResponder() {}

// ConfirmNotFoundCode is the HTTP code returned for type ConfirmNotFound
const ConfirmNotFoundCode int = 404

/*
ConfirmNotFound Not found

swagger:response confirmNotFound
*/
type ConfirmNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewConfirmNotFound creates ConfirmNotFound with default headers values
func NewConfirmNotFound() *ConfirmNotFound {

	return &ConfirmNotFound{}
}

// WithPayload adds the payload to the confirm not found response
func (o *ConfirmNotFound) WithPayload(payload *models.Error) *ConfirmNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the confirm not found response
func (o *ConfirmNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConfirmNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *ConfirmNotFound) ConfirmResponder() {}

/*
ConfirmDefault Internal error

swagger:response confirmDefault
*/
type ConfirmDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewConfirmDefault creates ConfirmDefault with default headers values
func NewConfirmDefault(code int) *ConfirmDefault {
	if code <= 0 {
		code = 500
	}

	return &ConfirmDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the confirm default response
func (o *ConfirmDefault) WithStatusCode(code int) *ConfirmDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the confirm default response
func (o *ConfirmDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the confirm default response
func (o *ConfirmDefault) WithPayload(payload *models.Error) *ConfirmDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the confirm default response
func (o *ConfirmDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConfirmDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *ConfirmDefault) ConfirmResponder() {}

type ConfirmNotImplementedResponder struct {
	middleware.Responder
}

func (*ConfirmNotImplementedResponder) ConfirmResponder() {}

func ConfirmNotImplemented() ConfirmResponder {
	return &ConfirmNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.Confirm has not yet been implemented",
		),
	}
}

type ConfirmResponder interface {
	middleware.Responder
	ConfirmResponder()
}
